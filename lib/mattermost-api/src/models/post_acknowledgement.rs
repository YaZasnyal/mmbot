/*
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostAcknowledgement {
    /// The ID of the user that made this acknowledgement.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    /// The ID of the post to which this acknowledgement was made.
    #[serde(rename = "post_id", skip_serializing_if = "Option::is_none")]
    pub post_id: Option<String>,
    /// The time in milliseconds in which this acknowledgement was made.
    #[serde(rename = "acknowledged_at", skip_serializing_if = "Option::is_none")]
    pub acknowledged_at: Option<i64>,
}

impl PostAcknowledgement {
    pub fn new() -> PostAcknowledgement {
        PostAcknowledgement {
            user_id: None,
            post_id: None,
            acknowledged_at: None,
        }
    }
}

