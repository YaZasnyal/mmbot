/*
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn).
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterInfoInner {
    /// The unique ID for the node
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The server version the node is on
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// The number of the latest DB migration successfully executed for the node
    #[serde(rename = "schema_version", skip_serializing_if = "Option::is_none")]
    pub schema_version: Option<String>,
    /// The hash of the configuration file the node is using
    #[serde(rename = "config_hash", skip_serializing_if = "Option::is_none")]
    pub config_hash: Option<String>,
    /// The IP address of the node
    #[serde(rename = "ipaddress", skip_serializing_if = "Option::is_none")]
    pub ipaddress: Option<String>,
    /// The hostname for this node
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
}

impl ClusterInfoInner {
    pub fn new() -> ClusterInfoInner {
        ClusterInfoInner {
            id: None,
            version: None,
            schema_version: None,
            config_hash: None,
            ipaddress: None,
            hostname: None,
        }
    }
}
