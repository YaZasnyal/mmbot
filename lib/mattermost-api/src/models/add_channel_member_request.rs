/*
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn).
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddChannelMemberRequest {
    /// The ID of user to add into the channel, for backwards compatibility.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    /// The IDs of users to add into the channel, required if 'user_id' doess not exist.
    #[serde(rename = "user_ids", skip_serializing_if = "Option::is_none")]
    pub user_ids: Option<Vec<String>>,
    /// The ID of root post where link to add channel member originates
    #[serde(rename = "post_root_id", skip_serializing_if = "Option::is_none")]
    pub post_root_id: Option<String>,
}

impl AddChannelMemberRequest {
    pub fn new() -> AddChannelMemberRequest {
        AddChannelMemberRequest {
            user_id: None,
            user_ids: None,
            post_root_id: None,
        }
    }
}
