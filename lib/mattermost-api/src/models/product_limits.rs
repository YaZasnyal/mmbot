/*
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn).
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductLimits {
    #[serde(rename = "boards", skip_serializing_if = "Option::is_none")]
    pub boards: Option<Box<models::BoardsLimits>>,
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<Box<models::FilesLimits>>,
    #[serde(rename = "integrations", skip_serializing_if = "Option::is_none")]
    pub integrations: Option<Box<models::IntegrationsLimits>>,
    #[serde(rename = "messages", skip_serializing_if = "Option::is_none")]
    pub messages: Option<Box<models::MessagesLimits>>,
    #[serde(rename = "teams", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Box<models::TeamsLimits>>,
}

impl ProductLimits {
    pub fn new() -> ProductLimits {
        ProductLimits {
            boards: None,
            files: None,
            integrations: None,
            messages: None,
            teams: None,
        }
    }
}
