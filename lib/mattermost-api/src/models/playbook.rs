/*
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Playbook {
    /// A unique, 26 characters long, alphanumeric identifier for the playbook.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The title of the playbook.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The description of the playbook.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The identifier of the team where the playbook is in.
    #[serde(rename = "team_id", skip_serializing_if = "Option::is_none")]
    pub team_id: Option<String>,
    /// A boolean indicating whether the playbook runs created from this playbook should be public or private.
    #[serde(rename = "create_public_playbook_run", skip_serializing_if = "Option::is_none", default, deserialize_with = "bool_parser::deserialize_option_bool")]
    pub create_public_playbook_run: Option<bool>,
    /// The playbook creation timestamp, formatted as the number of milliseconds since the Unix epoch.
    #[serde(rename = "create_at", skip_serializing_if = "Option::is_none")]
    pub create_at: Option<i64>,
    /// The playbook deletion timestamp, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the playbook is not deleted.
    #[serde(rename = "delete_at", skip_serializing_if = "Option::is_none")]
    pub delete_at: Option<i64>,
    /// The number of stages defined in this playbook.
    #[serde(rename = "num_stages", skip_serializing_if = "Option::is_none")]
    pub num_stages: Option<i64>,
    /// The total number of steps from all the stages defined in this playbook.
    #[serde(rename = "num_steps", skip_serializing_if = "Option::is_none")]
    pub num_steps: Option<i64>,
    /// The stages defined in this playbook.
    #[serde(rename = "checklists", skip_serializing_if = "Option::is_none")]
    pub checklists: Option<Vec<models::Checklist>>,
    /// The identifiers of all the users that are members of this playbook.
    #[serde(rename = "member_ids", skip_serializing_if = "Option::is_none")]
    pub member_ids: Option<Vec<String>>,
}

impl Playbook {
    pub fn new() -> Playbook {
        Playbook {
            id: None,
            title: None,
            description: None,
            team_id: None,
            create_public_playbook_run: None,
            create_at: None,
            delete_at: None,
            num_stages: None,
            num_steps: None,
            checklists: None,
            member_ids: None,
        }
    }
}

